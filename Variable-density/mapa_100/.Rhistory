ylab("Trip time duration [s]") +
scale_y_continuous(breaks=c(100,150,200,250,300,350,400,450,500,550,600), limits=c(50,600))+
scale_color_manual(values = c("#11A0D7","#083566","#000000")) +
theme_bw() +
theme(legend.title=element_blank(),
legend.justification=c(1,0),
legend.position=c(0.9,0.1),
legend.direction = "horizontal",
panel.border = element_rect(colour = "black", fill=NA, size=1)
)  +             # Position legend in bottom right
theme(legend.background = element_rect(colour="grey", size=0.5),axis.text=element_text(size=14),
axis.title=element_text(size=14),legend.text=element_text(size=14,colour="black",face="bold"))+
theme(
legend.key = element_rect(fill = "white", colour = "white"),
legend.key.size = unit(0.4, "in")
)+
theme(panel.grid.major = element_line(colour = "grey", linetype = "dashed"))
setwd("/home/storm/Documents/Pruebas/mapa_20")
x0 <- read.csv(file = 'withoutTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withoutTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withoutTLS-#1.csv')
x1 <- x1 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x1 %>% filter(name == "totalTime")
withoutTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withoutTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withoutTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withoutTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withoutTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withoutTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withoutTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withoutTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withoutTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withoutTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withoutTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withoutTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withoutTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withoutTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withoutTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withoutTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withoutTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithoutTLSx20<-c(withoutTLSx0,
withoutTLSx1,
withoutTLSx2,
withoutTLSx3,
withoutTLSx4,
withoutTLSx5,
withoutTLSx6,
withoutTLSx7,
withoutTLSx8,
withoutTLSx9)
############################################################################
x0 <- read.csv(file = 'withTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withTLS-#1.csv')
x1 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x0 %>% filter(name == "totalTime")
withTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithTLSx20<-c(withTLSx0,
withTLSx1,
withTLSx2,
withTLSx3,
withTLSx4,
withTLSx5,
withTLSx6,
withTLSx7,
withTLSx8,
withTLSx9)
#################################################
setwd("/home/storm/Documents/Pruebas/mapa_20")
#################################################
x0 <- read.csv(file = 'withoutTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withoutTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withoutTLS-#1.csv')
x1 <- x1 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x1 %>% filter(name == "totalTime")
withoutTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withoutTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withoutTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withoutTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withoutTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withoutTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withoutTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withoutTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withoutTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withoutTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withoutTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withoutTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withoutTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withoutTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withoutTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withoutTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withoutTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithoutTLSx20<-c(withoutTLSx0,
withoutTLSx1,
withoutTLSx2,
withoutTLSx3,
withoutTLSx4,
withoutTLSx5,
withoutTLSx6,
withoutTLSx7,
withoutTLSx8,
withoutTLSx9)
############################################################################
x0 <- read.csv(file = 'withTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withTLS-#1.csv')
x1 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x0 %>% filter(name == "totalTime")
withTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithTLSx20<-c(withTLSx0,
withTLSx1,
withTLSx2,
withTLSx3,
withTLSx4,
withTLSx5,
withTLSx6,
withTLSx7,
withTLSx8,
withTLSx9)
#################################################
setwd("/home/storm/Documents/Pruebas/mapa_60")
#################################################
x0 <- read.csv(file = 'withoutTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withoutTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withoutTLS-#1.csv')
x1 <- x1 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x1 %>% filter(name == "totalTime")
withoutTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withoutTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withoutTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withoutTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withoutTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withoutTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withoutTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withoutTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withoutTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withoutTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withoutTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withoutTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withoutTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withoutTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withoutTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withoutTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withoutTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithoutTLSx60<-c(withoutTLSx0,
withoutTLSx1,
withoutTLSx2,
withoutTLSx3,
withoutTLSx4,
withoutTLSx5,
withoutTLSx6,
withoutTLSx7,
withoutTLSx8,
withoutTLSx9)
############################################################################
x0 <- read.csv(file = 'withTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withTLS-#1.csv')
x1 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x0 %>% filter(name == "totalTime")
withTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithTLSx60<-c(withTLSx0,
withTLSx1,
withTLSx2,
withTLSx3,
withTLSx4,
withTLSx5,
withTLSx6,
withTLSx7,
withTLSx8,
withTLSx9)
#################################################
setwd("/home/storm/Documents/Pruebas/mapa_100")
#################################################
x0 <- read.csv(file = 'withoutTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withoutTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withoutTLS-#1.csv')
x1 <- x1 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x1 %>% filter(name == "totalTime")
withoutTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withoutTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withoutTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withoutTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withoutTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withoutTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withoutTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withoutTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withoutTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withoutTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withoutTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withoutTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withoutTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withoutTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withoutTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withoutTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withoutTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithoutTLSx100<-c(withoutTLSx0,
withoutTLSx1,
withoutTLSx2,
withoutTLSx3,
withoutTLSx4,
withoutTLSx5,
withoutTLSx6,
withoutTLSx7,
withoutTLSx8,
withoutTLSx9)
############################################################################
x0 <- read.csv(file = 'withTLS-#0.csv')
x0 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x0 <- x0 %>% filter(name == "totalTime")
withTLSx0 <- as.numeric(x0 %>% select(value))
x1 <- read.csv(file = 'withTLS-#1.csv')
x1 <- x0 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x1 <- x0 %>% filter(name == "totalTime")
withTLSx1 <- as.numeric(x1 %>% select(value))
x2 <- read.csv(file = 'withTLS-#2.csv')
x2 <- x2 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x2 <- x2 %>% filter(name == "totalTime")
withTLSx2 <- as.numeric(x2 %>% select(value))
x3 <- read.csv(file = 'withTLS-#3.csv')
x3 <- x3 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x3 <- x3 %>% filter(name == "totalTime")
withTLSx3 <- as.numeric(x3 %>% select(value))
x4 <- read.csv(file = 'withTLS-#4.csv')
x4 <- x4 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x4 <- x4 %>% filter(name == "totalTime")
withTLSx4 <- as.numeric(x4 %>% select(value))
x5 <- read.csv(file = 'withTLS-#5.csv')
x5 <- x5 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x5 <- x5 %>% filter(name == "totalTime")
withTLSx5 <- as.numeric(x5 %>% select(value))
x6 <- read.csv(file = 'withTLS-#6.csv')
x6 <- x6 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x6 <- x6 %>% filter(name == "totalTime")
withTLSx6 <- as.numeric(x6 %>% select(value))
x7 <- read.csv(file = 'withTLS-#7.csv')
x7 <- x7 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x7 <- x7 %>% filter(name == "totalTime")
withTLSx7 <- as.numeric(x7 %>% select(value))
x8 <- read.csv(file = 'withTLS-#8.csv')
x8 <- x8 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x8 <- x8 %>% filter(name == "totalTime")
withTLSx8 <- as.numeric(x8 %>% select(value))
x9 <- read.csv(file = 'withTLS-#9.csv')
x9 <- x9 %>% filter(module == "RSUExampleScenariomine.node[0].veinsmobility")
x9 <- x9 %>% filter(name == "totalTime")
withTLSx9 <- as.numeric(x9 %>% select(value))
vectorwithTLSx100<-c(withTLSx0,
withTLSx1,
withTLSx2,
withTLSx3,
withTLSx4,
withTLSx5,
withTLSx6,
withTLSx7,
withTLSx8,
withTLSx9)
#########################################################################
#######################################################################################
#save data in template
TrafficLightRsuAppTemplate <- read_csv("/home/storm/Documents/Datos_proyecto/codeR/dataSensors.csv")
#save data in template with 20 vehicles/km2
for (k in 1:10){
TrafficLightRsuAppTemplate[k,1] <- vectorwithoutTLSx20[k]#
TrafficLightRsuAppTemplate[30+k,1] <- vectorwithTLSx20[k]#
}
#save data in template with 60 vehicles/km2
for (k in 1:10){
TrafficLightRsuAppTemplate[10+k,1] <- vectorwithoutTLSx60[k]#
TrafficLightRsuAppTemplate[40+k,1] <- vectorwithTLSx60[k]#
}
#save data in template with 100 vehicles/km2
for (k in 1:10){
TrafficLightRsuAppTemplate[20+k,1] <- vectorwithoutTLSx100[k]#
TrafficLightRsuAppTemplate[50+k,1] <- vectorwithTLSx100[k]#
}
###############################################################################
tg <- TrafficLightRsuAppTemplate
tgc <- summarySE(tg, measurevar="len", groupvars=c("supp","dose"))
tgc
conflicts()
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) +
geom_line(lwd=1.25)+
#geom_smooth()+
geom_errorbar(aes(ymin=len-ci, ymax=len+ci),  width=5, position=position_dodge(5)) +
#geom_line(position=pd) +
#geom_point(position=pd, size=3, fill="white") + # 21 is filled circle
geom_point(aes(shape=supp),size=5)+# position=pd)+
scale_shape_manual(values=c(17,15,19))+ #9,16,17,15,8))+
scale_fill_manual(values=c("green", "green","green")) +
scale_x_continuous(breaks=c(0,20,40,60,80,100))+
xlab(expression(paste("Vehicles' density (veh/",km^{2},")"))) +
ylab("Trip time duration [s]") +
scale_y_continuous(breaks=c(100,150,200,250,300,350,400,450,500,550,600), limits=c(50,600))+
scale_color_manual(values = c("#11A0D7","#083566","#000000")) +
theme_bw() +
theme(legend.title=element_blank(),
legend.justification=c(1,0),
legend.position=c(0.9,0.1),
legend.direction = "horizontal",
panel.border = element_rect(colour = "black", fill=NA, size=1)
)  +             # Position legend in bottom right
theme(legend.background = element_rect(colour="grey", size=0.5),axis.text=element_text(size=14),
axis.title=element_text(size=14),legend.text=element_text(size=14,colour="black",face="bold"))+
theme(
legend.key = element_rect(fill = "white", colour = "white"),
legend.key.size = unit(0.4, "in")
)+
theme(panel.grid.major = element_line(colour = "grey", linetype = "dashed"))
conflicts()
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) +
geom_line(lwd=1.25)+
#geom_smooth()+
geom_errorbar(aes(ymin=len-ci, ymax=len+ci),  width=5, position=position_dodge(5)) +
#geom_line(position=pd) +
#geom_point(position=pd, size=3, fill="white") + # 21 is filled circle
geom_point(aes(shape=supp),size=5)+# position=pd)+
scale_shape_manual(values=c(17,15,19))+ #9,16,17,15,8))+
scale_fill_manual(values=c("green", "green","green")) +
scale_x_continuous(breaks=c(0,20,40,60,80,100))+
xlab(expression(paste("Vehicles' density (veh/",km^{2},")"))) +
ylab("Trip time duration [s]") +
scale_y_continuous(breaks=c(100,150,200,250,300,350,400,450,500,550,600,650,700), limits=c(50,700))+
scale_color_manual(values = c("#11A0D7","#083566","#000000")) +
theme_bw() +
theme(legend.title=element_blank(),
legend.justification=c(1,0),
legend.position=c(0.9,0.1),
legend.direction = "horizontal",
panel.border = element_rect(colour = "black", fill=NA, size=1)
)  +             # Position legend in bottom right
theme(legend.background = element_rect(colour="grey", size=0.5),axis.text=element_text(size=14),
axis.title=element_text(size=14),legend.text=element_text(size=14,colour="black",face="bold"))+
theme(
legend.key = element_rect(fill = "white", colour = "white"),
legend.key.size = unit(0.4, "in")
)+
theme(panel.grid.major = element_line(colour = "grey", linetype = "dashed"))
